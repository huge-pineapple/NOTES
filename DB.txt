一. 数据库事务
1.事务是一系列对系统中数据进行的操作所组成的一个程序执行逻辑单元
2.构成逻辑整体的这些数据库操作，要么全部执行成功，要么全部不执行，数据库总能保持一致性状态

二.事务的ACID性质
原子性(Atomicity):事务中的所有操作作为一个整体像原子一样不可分割，要么全部成功,要么全部失败。

一致性(Consistency):事务的执行结果必须使数据库从一个一致性状态到另一个一致性状态。一致性状态是指:
1.系统的状态满足数据的完整性约束(主码,参照完整性,check约束等)
2.系统的状态反应数据库本应描述的现实世界的真实状态,比如转账前后两个账户的金额总和应该保持不变。

隔离性(Isolation):并发执行的事务不会相互影响,其对数据库的影响和它们串行执行时一样。
比如多个用户同时往一个账户转账,最后账户的结果应该和他们按先后次序转账的结果一样。

持久性(Durability):事务一旦提交,其对数据库的更新就是持久的。任何事务或系统故障都不会导致数据丢失。

通过并发控制技术保证事务的隔离性，使一致性不会因为并发执行的操作被破坏
日志恢复技术保证了事务的原子性,使一致性状态不会因事务或系统故障被破坏。同时使已提交的对数据库的修改不会因系统崩溃而丢失,保证了事务的持久性。

三.并发异常
1.脏写
脏写是指事务回滚（ROLLBACK）了其他事务对数据项的已提交修改
2.丢失更新
丢失更新是指事务覆盖了其他事务对数据的已提交修改,导致这些修改好像丢失了一样
3.脏读
脏读是指一个事务读取了另一个事务未提交的数据
4.不可重复读
不可重复读是指一个事务对同一数据的读取结果前后不一致。脏读和不可重复读的区别在于:前者读取的是事务未提交的脏数据,后者读取的是事务已经提交的数据,
只不过因为数据被其他事务修改过导致前后两次读取的结果不一样
ps:修改数据
5.幻读
幻读是指事务读取某个范围的数据时，因为其他事务的操作导致前后两次读取的结果不一致。
幻读和不可重复读的区别在于,不可重复读是针对确定的某一行数据而言,而幻读是针对不确定的多行数据。
因而幻读通常出现在带有查询条件的范围查询中
ps:插入数据

四.事务的隔离级别
事务具有隔离性,理论上来说事务之间的执行不应该相互产生影响,其对数据库的影响应该和它们串行执行时一样。

然而完全的隔离性会导致系统并发性能很低,降低对资源的利用率,因而实际上对隔离性的要求会有所放宽,这也会一定程度造成对数据库一致性要求降低

SQL标准为事务定义了不同的隔离级别,从低到高依次是

读未提交(READ UNCOMMITTED) < 读已提交(READ COMMITTED) < 可重复读(REPEATABLE READ) < 串行化(SERIALIZABLE)
事务的隔离级别越低,可能出现的并发异常越多,但是通常而言系统能提供的并发能力越强。

五.常见的并发控制技术——隔离性的实现

乐观并发控制:对于并发执行可能冲突的操作,假定其不会真的冲突,允许并发执行,直到真正发生冲突时才去解决冲突,比如让事务回滚。

悲观并发控制:对于并发执行可能冲突的操作,假定其必定发生冲突,通过让事务等待(锁)或者中止(时间戳排序)的方式使并行的操作串行执行。

a.基于封锁的并发控制
锁通常分为共享锁和排他锁两种类型

b.基于时间戳的并发控制
对于并发可能冲突的操作,基于时间戳排序规则选定某事务继续执行,其他事务回滚。

c.基于有效性检查的并发控制
事务对数据的更新首先在自己的工作空间进行,等到要写回数据库时才进行有效性检查,对不符合要求的事务进行回滚。

d.基于快照隔离的并发控制
数据库为每个数据项维护多个版本(快照),每个事务只对属于自己的私有快照进行更新,
在事务真正提交前进行有效性检查,使得事务正常提交更新或者失败回滚。

1.共享锁(S):事务T对数据A加共享锁,其他事务只能对A加共享锁但不能加排他锁。
2.排他锁(X):事务T对数据A加排他锁,其他事务对A既不能加共享锁也不能加排他锁

六、故障与故障恢复技术
https://www.cnblogs.com/takumicx/p/9998844.html#1-%E8%AE%A4%E8%AF%86%E4%BA%8B%E5%8A%A1

七、索引
https://www.cnblogs.com/wwxzdl/p/11116446.html
